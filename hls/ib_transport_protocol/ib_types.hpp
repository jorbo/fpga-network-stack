#pragma once

// QP/EE states, page 473
typedef enum {RESET, INIT, READY_RECV, READY_SEND, SQ_ERROR, ERROR} qpState;


typedef enum {AETH, RETH} pkgType;
typedef enum {SHIFT_AETH, SHIFT_RETH, SHIFT_NONE} pkgShiftType;
typedef enum {MEM, FIFO} pkgSource;

//See page 246
typedef enum {
	RC_RDMA_WRITE_FIRST = 0x06,
	RC_RDMA_WRITE_MIDDLE = 0x07,
	RC_RDMA_WRITE_LAST = 0x08,
	RC_RDMA_WRITE_LAST_WITH_IMD = 0x09,
	RC_RDMA_WRITE_ONLY = 0x0A,
	RC_RDMA_WRITE_ONLY_WIT_IMD = 0x0B,
	RC_RDMA_READ_REQUEST = 0x0C,
	RC_RDMA_READ_RESP_FIRST = 0x0D,
	RC_RDMA_READ_RESP_MIDDLE = 0x0E,
	RC_RDMA_READ_RESP_LAST = 0x0F,
	RC_RDMA_READ_RESP_ONLY = 0x10,
	RC_ACK = 0x11,
	RC_RDMA_PART_ONLY = 0x18,
	RC_RDMA_PART_FIRST = 0x19,
	RC_RDMA_PART_MIDDLE = 0x1A,
	RC_RDMA_PART_LAST = 0x1B,
	RC_RDMA_READ_POINTER_REQUEST = 0x1C,
	RC_RDMA_READ_CONSISTENT_REQUEST = 0x1D,
	RC_RDMA_ATOMIC_REQUEST = 0x1F,
	RC_RDMA_ATOMIC_ACK = 0x20,
} ibOpCode;
